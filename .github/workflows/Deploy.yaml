name: Continuous Delivery to EKS

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: 'ap-south-1'

    - name: Set up SSH private key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/tok.pem
        chmod 600 ~/.ssh/tok.pem  # Set appropriate permissions for the private key

    - name: Ensure target directory exists on EC2
      run: |
        ssh -i ~/.ssh/tok.pem ubuntu@13.233.97.90 << 'EOF'
        mkdir -p /target-directory
        EOF

    - name: Set up kubectl for EKS
      uses: aws-actions/configure-aws-credentials@v2
      with:
        cluster-name: ${{ secrets.EKS_CLUSTER_NAME }}
        region: ${{ secrets.AWS_REGION }}

    - name: Apply Database Deployment and Service
      run: |
        kubectl apply -f k8s/db-deployment.yaml
        kubectl apply -f k8s/db-service.yaml

    - name: Apply Backend Deployment and Service
      run: |
        kubectl apply -f k8s/backend-deploy.yaml
        kubectl apply -f k8s/backend-service.yaml

    - name: Apply Frontend Deployment and Service
      run: |
        kubectl apply -f k8s/frontend-deploy.yaml
        kubectl apply -f k8s/frontend-service.yaml

    - name: Verify Backend Service is Running
      run: |
        kubectl rollout status deployment/backend
        kubectl get pods -l app=backend

    - name: Verify Frontend Service is Running
      run: |
        kubectl rollout status deployment/frontend
        kubectl get pods -l app=frontend

    - name: Verify Database Service is Running
      run: |
        kubectl rollout status deployment/database
        kubectl get pods -l app=database

    - name: Verify Application is Accessible
      run: |
        FRONTEND_IP=$(kubectl get svc frontend-service -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
        echo "Frontend is accessible at: http://$FRONTEND_IP"
