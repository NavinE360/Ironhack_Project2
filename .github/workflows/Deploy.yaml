name: Continuous Delivery to EKS

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: self-hosted  # Changed to self-hosted

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

     
  deploy:
    runs-on: self-hosted  # Changed to self-hosted
    needs: build

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up AWS CLI
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'ap-northeast-1'
        
      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region ap-northeast-1 --name navinE

      # Step 3: Set up SSH and connect to EC2
      - name: Set up SSH private key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_KEY }}" > ~/.ssh/tok.pem
          chmod 600 ~/.ssh/tok.pem
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        run: |
          ssh -i ~/.ssh/tok.pem ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
            rm -rf Ironhack_Project2
            git clone https://github.com/NavinE360/Ironhack_Project2.git
            cd Ironhack_Project2
            cd k8s
         
          EOF

      # Step 4: Deploy to EKS
      - name: Deploy to EKS
        run: |
          kubectl apply -f db-deploy.yaml
          kubectl apply -f backend-deploy.yaml
          kubectl apply -f frontend-deploy.yaml
         
