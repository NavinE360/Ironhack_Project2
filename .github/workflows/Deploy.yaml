name: Continuous Delivery to EKS

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy to EKS Cluster
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Set up kubectl
      uses: aws-actions/eks-kubeconfig-action@v1
      with:
        cluster-name: ${{ secrets.EKS_CLUSTER_NAME }}
        region: ${{ secrets.AWS_REGION }}

    - name: Apply Database Deployment and Service
      run: |
        kubectl apply -f k8s/db-deployment.yaml
       
    - name: Apply Backend Deployment and Service
      run: |
        kubectl apply -f k8s/backend-deploy.yaml
     

    - name: Apply Frontend Deployment and Service
      run: |
        kubectl apply -f k8s/frontend-deploy.yaml
     

    - name: Verify Backend Service is Running
      run: |
        kubectl rollout status deployment/backend
        kubectl get pods -l app=backend

    - name: Verify Frontend Service is Running
      run: |
        kubectl rollout status deployment/frontend
        kubectl get pods -l app=frontend

    - name: Verify Database Service is Running
      run: |
        kubectl rollout status deployment/database
        kubectl get pods -l app=database

    - name: Verify Application is Accessible
      run: |
        FRONTEND_IP=$(kubectl get svc frontend-service -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
        echo "Frontend is accessible at: http://$FRONTEND_IP"
