name: Continuous Delivery to EKS

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: self-hosted  # Changed to self-hosted

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Step 3: Build Docker images
      - name: Build Docker images
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/ironhack-project2-api:latest ./api
          docker build -t ${{ secrets.DOCKER_USERNAME }}/ironhack-project2-ui:latest ./ui

      # Step 4: Push Docker images to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker images
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/ironhack-project2-api:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/ironhack-project2-ui:latest

  deploy:
    runs-on: self-hosted  # Changed to self-hosted
    needs: build

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up AWS CLI
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'ap-south-1'
        
      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region ap-south-1 --name IH-cluster 

      # Step 3: Set up SSH and connect to EC2
      - name: Set up SSH private key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_KEY }}" > ~/.ssh/new-my-kp.pem
          chmod 600 ~/.ssh/new-my-kp.pem
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        run: |
          ssh -i ~/.ssh/new-my-kp.pem ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
            rm -rf Ironhack_Project2
            git clone https://github.com/NavinE360/Ironhack_Project2.git
            cd Ironhack_Project2
            sudo npm install
            sudo npm run build
          EOF

      # Step 4: Deploy to EKS
      - name: Deploy to EKS
        run: |
          kubectl apply -f ./namespace.yml
          kubectl apply -f ./db_deploy.yml
          kubectl apply -f ./db_clusterip.yml
          kubectl apply -f ./backend_deploy.yml
          kubectl apply -f ./loadbalancer_backend.yml
          kubectl apply -f ./configmap.yml
          kubectl apply -f ./frontend_deploy.yml
          kubectl apply -f ./loadbalancer_frontend.yml
